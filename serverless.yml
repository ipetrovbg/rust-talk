service: rust-talk

provider:
  name: aws
  memorySize: 128
  versionFunctions: false
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:Query'
      Resource:
        Fn::GetAtt: [UsersTable, Arn]

plugins:
  - cargo-lambda-serverless
  - serverless-webpack

custom:
  webpack:
    packager: npm
    includeModules:
      forceExclude:
        - aws-sdk
    webpackConfig: './webpack.config.js'


package:
  individually: true

functions:
  # Sum Lambdas
  rust_sum:
    handler: bootstrap
    runtime: provided.al2
    cargo:
      path: target/lambda/rust_sum/bootstrap
    url:
      cors: true

  nodeSum:
    handler: src/node-sum.main
    runtime: nodejs18.x
    url:
      cors: true

  # DynamoDB Lambdas
  rust_dynamodb:
    handler: bootstrap
    runtime: provided.al2
    cargo:
      path: target/lambda/rust_dynamodb/bootstrap
    url:
      cors: true

  nodeDynamodb:
    handler: src/node-dynamodb.main
    runtime: nodejs18.x
    url:
      cors: true

  # Hello World Lambdas
  node_lambda:
    handler: src/node-hello.main
    runtime: nodejs18.x
    url:
      cors: true

  rust_lambda:
    handler: bootstrap
    runtime: provided.al2
    cargo:
      path: target/lambda/rust_hello/bootstrap
    url:
      cors: true


resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        AttributeDefinitions:
          - AttributeName: userRole
            AttributeType: S
        KeySchema:
          - AttributeName: userRole
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
