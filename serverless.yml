service: rust-talk

provider:
  name: aws
  memorySize: 128
  versionFunctions: false
  region: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Query"
      Resource:
        Fn::GetAtt: [UsersTable, Arn]

plugins:
  - cargo-lambda-serverless
  - serverless-webpack

custom:
  webpack:
    packager: npm
    webpackConfig: 'webpack.config.js'

package:
  individually: true

functions:

  rust_lambda:
    handler: bootstrap
    runtime: provided.al2
    cargo:
      path: 'target/lambda/rust_talk_rust/bootstrap'
    url:
      cors: true

  rust_dynamodb:
    handler: bootstrap
    runtime: provided.al2
    cargo:
      path: 'target/lambda/rust_dynamodb/bootstrap'
    url:
      cors: true

  node_lambda:
    handler: src/rust_talk_node.main
    runtime: 'nodejs18.x'
    url:
      cors: true


Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      AttributeDefinitions:
        - AttributeName: userRole
          AttributeType: S
      KeySchema:
        - AttributeName: userRole
          KeyType: HASH
